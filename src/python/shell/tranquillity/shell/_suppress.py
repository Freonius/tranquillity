# -*- coding: utf-8 -*-
# pylint: enable=missing-function-docstring,missing-module-docstring,missing-class-docstring
"""Module for suppressing output.
"""
from os import open as os_open, close as os_close, dup, dup2, devnull, O_RDWR
from typing import List, Tuple


class SuppressOutput:
    """Suppress all output, including that generated by C++ code.

    Use it with 'with'. E.g.:

    ```python
    with SuppressOutput():
        print('Invisible')  # Will not print
    ```
    """
    _null_fds: List[int]
    _save_fds: Tuple[int, int]

    def __init__(self):
        # Open a pair of null files
        self._null_fds = [os_open(devnull, O_RDWR) for x in range(2)]
        # Save the actual stdout (1) and stderr (2) file descriptors.
        self._save_fds = (dup(1), dup(2))

    def __enter__(self):
        """Suppress output.
        """
        # Assign the null pointers to stdout and stderr.
        dup2(self._null_fds[0], 1)
        dup2(self._null_fds[1], 2)

    def __exit__(self, *_):
        """Re-enable output.
        """
        # Re-assign the real stdout/stderr back to (1) and (2)
        dup2(self._save_fds[0], 1)
        dup2(self._save_fds[1], 2)
        # Close the null files
        os_close(self._null_fds[0])
        os_close(self._null_fds[1])
